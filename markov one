import java.util.*;
/**
 * Write a description of MarkovOne here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class MarkovOne {
    private Random myrandom;
    private String mytext;
    public MarkovOne()
    {
        myrandom = new Random();
    }
    public void setTraining(String s)
    {
        mytext=s.trim();
    }
    public void setRandom(int seed)
    {
        myrandom = new Random(seed);
    }
    public ArrayList<String> getFollows(String key)
    {
        ArrayList<String> answer = new ArrayList<String> ();
        int keyLength = key.length();
        
        for (int i=0; i < mytext.length()-keyLength; i++) {
            if (mytext.substring(i, i+keyLength).equals(key)) {
                String next = mytext.substring(i+keyLength, i+keyLength+1);
                answer.add(next);
            }
        /* ArrayList<String> follow =new ArrayList<String>();
          int pos =0;
        while(pos < mytext.length()) {
            
            int start = mytext.indexOf(key,pos);
            
            if(start == -1) {
                break;
               }
            
               
            if(start+ key.length() >= mytext.length()-1) {
                break;   
            }
            
            int begin = start + key.length();
            int end = start + key.length() +1;
            String next = mytext.substring(begin,end);
            follow.add(next);
            pos=start+key.length();
        }*/
    }
        return answer;
    }
    public String getRandomText(int numchar)
    {
        String next;
        StringBuilder sb=new StringBuilder();
        int index=myrandom.nextInt(mytext.length()-1);
        String key=mytext.substring(index,index+1);
        
        sb.append(key);
        for(int i=0;i<numchar-1;i++)
        {
            ArrayList<String> follows=getFollows(key);
           //System.out.println("key "+key+ follows);
            //System.out.println(follows.size());
            if(follows.size()==0)
            {
            break;
             }
            //
            index=myrandom.nextInt(follows.size());
            next = follows.get(index);
            sb.append(next);
            key=next;
            
        }
        return sb.toString();
    }
}
